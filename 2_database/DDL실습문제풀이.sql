CREATE TABLE TB_CATEGORY(
    PK_CATEGORY_NAME VARCHAR2(20) PRIMARY KEY,
    USE_YN CHAR(1) DEFAULT 'Y'

);
DROP TABLE TB_CATEGORY;
DROP TABLE TB_CLASS_TYPE;
CREATE TABLE TB_CLASS_TYPE(
    PK_CLASS_TYPE_NO VARCHAR2(10) PRIMARY KEY,
    NAME VARCHAR2(20) NOT NULL,
    FK_DEPARTMENT_CATEGORY VARCHAR2(20) REFERENCES TB_DEPARTMENT(CATEGORY)
);
SELECT * FROM TB_CATEGORY;
--8
INSERT INTO TB_CATEGORY VALUES('공학','Y');
INSERT INTO TB_CATEGORY VALUES('자연과학','Y');
INSERT INTO TB_CATEGORY VALUES('의학','Y');
INSERT INTO TB_CATEGORY VALUES('예체능','Y');
INSERT INTO TB_CATEGORY VALUES('인문사회','Y');
COMMIT;

GRANT SELECT ON DUAL TO wk;

--10
--학번 학생이름 주소
CREATE VIEW VW_학생일반정보 AS(
    SELECT STUDENT_NO, STUDENT_NAME,STUDENT_ADDRESS
    FROM TB_STUDENT
);

--11
CREATE VIEW VW_지도면담 AS (
    SELECT STUDENT_NAME, PROFESSOR_NAME,DEPARTMENT_NAME
    FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
    JOIN TB_PROFESSOR ON (PROFESSOR_NO = COACH_PROFESSOR_NO)
);
SELECT * FROM TB_DEPARTMENT;
--12
CREATE VIEW VW_학과별학생수 AS (
    SELECT DEPARTMENT_NAME, COUNT(*) AS STDUENT_COUNT
    FROM TB_DEPARTMENT
    GROUP BY DEPARTMENT_NAME
);

--13 
UPDATE VW_학생일반정보 
SET STDUENT_NAME ='함유철'
WHERE STUDENT_NO ='A213046';

--14
--마지막 구문에 WITH READ ONLY; OR WITH CHECK OPTION구문을 추가
UPDATE VW_학생일반정보 
SET STDUENT_NAME ='함유철'
WHERE STUDENT_NO ='A213046';

--15
--HAVING CLASS_NO IN ()


SELECT CLASS_NO,CLASS_NAME,총수
FROM(
    SELECT CLASS_NO,COUNT(CLASS_NO) 총수
    FROM(
        SELECT CLASS_NO, TERM_NO
        FROM TB_GRADE
        WHERE TERM_NO IN (SELECT TERM_NO
        FROM TB_GRADE
        GROUP BY TERM_NO HAVING SUBSTR(TERM_NO,1,4)> (SELECT MAX(SUBSTR(TERM_NO,1,4))-3
                                                        FROM TB_GRADE)))
    GROUP BY CLASS_NO
    ORDER BY COUNT(CLASS_NO) DESC)
JOIN TB_CLASS USING(CLASS_NO)
WHERE ROWNUM <=3
ORDER BY 총수 DESC;




--HAVING ENTRANCE_DATE>=MAX(ENTRANCE_DATE)- (INTERVAL '3' YEAR);
--
--SELECT CLASS_NO
--FROM TB_GRADE
--WHERE ;
--
--WHERE TERM_NO >(SELECT MAX(SUBSTR(TERM_NO,1,4))-3;
--
--GROUP BY TERM_NO HAVING SUBSTR(TERM_NO,1,4) >MAX(SUBSTR(TERM_NO,1,4))-3;
--
--SELECT MAX(ENTRANCE_DATE)- (INTERVAL '3' YEAR)
--FROM TB_STUDENT;

